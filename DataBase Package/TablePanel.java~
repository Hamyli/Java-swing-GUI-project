public class TablePanel extends JPanel
{
  public TableDemo() 
  {
    super(new GridLayout(1,0));

    JTable table = new JTable(new MyTableModel());
    table.setPreferredScrollableViewportSize(new Dimension(500, 70));

    //Create the scroll pane and add the table to it.
    JScrollPane scrollPane = new JScrollPane(table);

    //Add the scroll pane to this panel.
    add(scrollPane);
  }
   
  private static void createAndShowGUI() 
  {
    //Create and set up the window.
    JFrame frame = new JFrame("TableDemo");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    //Create and set up the content pane.
    TableDemo newContentPane = new TableDemo();
    newContentPane.setOpaque(true); //content panes must be opaque
    frame.setContentPane(newContentPane);

    //Display the window.
    frame.pack();
    frame.setVisible(true);
  }
}

class MyTableModel extends AbstractTableModel 
{
   private String[] columnNames = {"First Name","Last Name","Student Number","Grade","Euclid","CNML"};
   private Object[][] data = 
   {
     {"Mary", "Campione",
      new Integer(615731), new Integer(5), new Boolean(false), new Boolean(true)},
     {"Alison", "Huml",
      new Integer(111111), new Integer(3), new Boolean(true), new Boolean(true)},
     {"Kathy", "Walrath",
      new Integer(222222), new Integer(2), new Boolean(false), new Boolean(true)},
     {"Sharon", "Zakhour",
      new Integer(333333), new Integer(20), new Boolean(true), new Boolean(true)},
     {"Philip", "Milne",
      new Integer(444444), new Integer(10), new Boolean(false), new Boolean(true)},
     {"Isaac", "Rabinovitch", 
      new Integer(555555), new Integer(1000), new Boolean(false), new Boolean(true)}
   };

   public int getColumnCount() 
   {
     return columnNames.length;
   }

   public int getRowCount() 
   {
     return data.length;
   }

   public String getColumnName(int col) 
   {
     return columnNames[col];
   }

   public Object getValueAt(int row, int col) 
   {
     return data[row][col];
   }

   public Class getColumnClass(int c) 
   {
     return getValueAt(0, c).getClass();
   }

   public boolean isCellEditable(int row, int col) 
   {
     if (col < 2) 
     {
       return false;
     } 
     else 
     {
       return true;
     }
   }

   public void setValueAt(Object value, int row, int col) 
   {
     if (DEBUG) 
     {
       System.out.println("Setting value at " + row + "," + col+ " to " + value+ " (an instance of "+ value.getClass() + ")");
     }
     data[row][col] = value;
     fireTableCellUpdated(row, col);

     if (DEBUG) 
     {
       System.out.println("New value of data:");
       printDebugData();
     }
   }

   private void printDebugData() 
   {
     int numRows = getRowCount();
     int numCols = getColumnCount();

     for (int i=0; i < numRows; i++) 
     {
       System.out.print("    row " + i + ":");
       for (int j=0; j < numCols; j++) 
       {
         System.out.print("  " + data[i][j]);
       }
       System.out.println();
     }
     System.out.println("--------------------------");
   }
}